{"ast":null,"code":"let isValid = true;\nlet message = \"\";\nconst checkName = (name, label) => {\n  const regex = /^[a-zA-Z'àâäéèêëîïôöùûüç'-]+$/;\n  isValid = true;\n  message = \"\";\n  if (!name) {\n    message = `Veuillez renseigner un ${label}`;\n    isValid = false;\n  } else if (!regex.test(name)) {\n    message = `Le ${label} ne doit pas contenir de chiffre ou de caractère spécial`;\n    isValid = false;\n  }\n  return {\n    isValid: isValid,\n    message: {\n      target: label === \"nom\" ? \"lastName\" : \"firstName\",\n      value: message\n    }\n  };\n};\nconst checkEmail = email => {\n  const regex = /@/;\n  isValid = true;\n  message = \"\";\n  if (!email) {\n    message = `Veuillez renseigner un email`;\n    isValid = false;\n  } else if (!regex.test(email)) {\n    message = \"Le format de l'email n'est pas valide, il manque un arobase\";\n    isValid = false;\n  }\n  return {\n    isValid: isValid,\n    message: {\n      target: \"email\",\n      value: message\n    }\n  };\n};\nconst checkBirthDate = birthDate => {\n  isValid = true;\n  message = \"\";\n  if (!birthDate) {\n    isValid = false;\n    message = \"Veuillez renseigner une date de naissance\";\n  }\n  if (!(birthDate instanceof Date)) {\n    const formatBirthDate = new Date(birthDate);\n  }\n\n  // if (isNaN(birthDate.getTime())) {\n  //     console.log(\"test\")\n  //   }\n  return {\n    isValid: isValid,\n    message: {\n      target: \"email\",\n      value: message\n    }\n  };\n};\nexport { checkName, checkEmail, checkBirthDate };","map":{"version":3,"names":["isValid","message","checkName","name","label","regex","test","target","value","checkEmail","email","checkBirthDate","birthDate","Date","formatBirthDate"],"sources":["C:/Git/ProjetPerso/Ynov/Fenol2/my-app/src/validations/formValidation.js"],"sourcesContent":["let isValid = true; \r\nlet message = \"\";\r\n\r\nconst checkName = (name, label) => {\r\n    const regex = /^[a-zA-Z'àâäéèêëîïôöùûüç'-]+$/;\r\n    isValid = true\r\n    message = \"\"\r\n\r\n    if (!name) {\r\n        message = `Veuillez renseigner un ${label}`;\r\n        isValid = false;\r\n    } else if (!regex.test(name)) {\r\n        message = `Le ${label} ne doit pas contenir de chiffre ou de caractère spécial`;\r\n        isValid = false;\r\n    }\r\n    return {isValid: isValid , message: {target: label === \"nom\" ? \"lastName\" : \"firstName\", value: message}  } \r\n}\r\n\r\nconst checkEmail = (email) => {\r\n    const regex = /@/\r\n    isValid = true\r\n    message = \"\"\r\n\r\n    if(!email) {\r\n        message = `Veuillez renseigner un email`\r\n        isValid = false\r\n    }else if (!regex.test(email)){\r\n        message = \"Le format de l'email n'est pas valide, il manque un arobase\"\r\n        isValid = false\r\n    }\r\n    return {isValid: isValid , message: {target: \"email\", value: message}  } \r\n}\r\n\r\nconst checkBirthDate = (birthDate) => {\r\n    isValid = true\r\n    message = \"\"\r\n\r\n    if(!birthDate) {\r\n        isValid = false\r\n        message = \"Veuillez renseigner une date de naissance\"\r\n    }\r\n    \r\n\r\n    if (!(birthDate instanceof Date)) {\r\n        const formatBirthDate = new Date(birthDate)\r\n    }\r\n\r\n\r\n    \r\n    // if (isNaN(birthDate.getTime())) {\r\n    //     console.log(\"test\")\r\n    //   }\r\n    return {isValid: isValid , message: {target: \"email\", value: message}  } \r\n}\r\n\r\nexport {checkName, checkEmail, checkBirthDate}"],"mappings":"AAAA,IAAIA,OAAO,GAAG,IAAI;AAClB,IAAIC,OAAO,GAAG,EAAE;AAEhB,MAAMC,SAAS,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC/B,MAAMC,KAAK,GAAG,+BAA+B;EAC7CL,OAAO,GAAG,IAAI;EACdC,OAAO,GAAG,EAAE;EAEZ,IAAI,CAACE,IAAI,EAAE;IACPF,OAAO,GAAI,0BAAyBG,KAAM,EAAC;IAC3CJ,OAAO,GAAG,KAAK;EACnB,CAAC,MAAM,IAAI,CAACK,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC,EAAE;IAC1BF,OAAO,GAAI,MAAKG,KAAM,0DAAyD;IAC/EJ,OAAO,GAAG,KAAK;EACnB;EACA,OAAO;IAACA,OAAO,EAAEA,OAAO;IAAGC,OAAO,EAAE;MAACM,MAAM,EAAEH,KAAK,KAAK,KAAK,GAAG,UAAU,GAAG,WAAW;MAAEI,KAAK,EAAEP;IAAO;EAAG,CAAC;AAC/G,CAAC;AAED,MAAMQ,UAAU,GAAIC,KAAK,IAAK;EAC1B,MAAML,KAAK,GAAG,GAAG;EACjBL,OAAO,GAAG,IAAI;EACdC,OAAO,GAAG,EAAE;EAEZ,IAAG,CAACS,KAAK,EAAE;IACPT,OAAO,GAAI,8BAA6B;IACxCD,OAAO,GAAG,KAAK;EACnB,CAAC,MAAK,IAAI,CAACK,KAAK,CAACC,IAAI,CAACI,KAAK,CAAC,EAAC;IACzBT,OAAO,GAAG,6DAA6D;IACvED,OAAO,GAAG,KAAK;EACnB;EACA,OAAO;IAACA,OAAO,EAAEA,OAAO;IAAGC,OAAO,EAAE;MAACM,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAEP;IAAO;EAAG,CAAC;AAC5E,CAAC;AAED,MAAMU,cAAc,GAAIC,SAAS,IAAK;EAClCZ,OAAO,GAAG,IAAI;EACdC,OAAO,GAAG,EAAE;EAEZ,IAAG,CAACW,SAAS,EAAE;IACXZ,OAAO,GAAG,KAAK;IACfC,OAAO,GAAG,2CAA2C;EACzD;EAGA,IAAI,EAAEW,SAAS,YAAYC,IAAI,CAAC,EAAE;IAC9B,MAAMC,eAAe,GAAG,IAAID,IAAI,CAACD,SAAS,CAAC;EAC/C;;EAIA;EACA;EACA;EACA,OAAO;IAACZ,OAAO,EAAEA,OAAO;IAAGC,OAAO,EAAE;MAACM,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAEP;IAAO;EAAG,CAAC;AAC5E,CAAC;AAED,SAAQC,SAAS,EAAEO,UAAU,EAAEE,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}