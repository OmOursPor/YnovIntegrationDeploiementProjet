{"ast":null,"code":"let isValid = true;\nlet message = \"\";\nconst checkName = (name, label) => {\n  const regex = /^[a-zA-Z']+$/;\n\n  // console.log(!regex.test(name))\n\n  if (!name) {\n    console.log(\"1\");\n    message = `Veuillez renseigner un ${label}`;\n    isValid = false;\n  } else if (!regex.test(name)) {\n    console.log(\"2\");\n    message = `Le ${label} ne doit pas contenir de chiffre ou de caractère spécial`;\n    isValid = false;\n  }\n  return {\n    isValid: isValid,\n    message: {\n      target: label === \"nom\" ? \"lastName\" : \"firstName\",\n      value: message\n    }\n  };\n};\nconst checkEmail = email => {\n  const regex = /^[@]+$/;\n  if (!email) {\n    message = `Veuillez renseigner un email`;\n    isValid = false;\n  } else if (!regex.test(email)) {\n    message = \"Le format de l'email n'est pas valide, il manque un arobase\";\n    isValid = false;\n  }\n  return {\n    isValid: isValid,\n    message: {\n      target: \"email\",\n      value: message\n    }\n  };\n};\nexport { checkName, checkEmail };","map":{"version":3,"names":["isValid","message","checkName","name","label","regex","console","log","test","target","value","checkEmail","email"],"sources":["C:/Git/ProjetPerso/Ynov/Fenol2/my-app/src/validations/formValidation.js"],"sourcesContent":["let isValid = true; \r\nlet message = \"\";\r\n\r\nconst checkName = (name, label) => {\r\n    const regex = /^[a-zA-Z']+$/;\r\n    \r\n    // console.log(!regex.test(name))\r\n\r\n    if (!name) {\r\n        console.log(\"1\")\r\n        message = `Veuillez renseigner un ${label}`;\r\n        isValid = false;\r\n    } else if (!regex.test(name)) {\r\n        console.log(\"2\")\r\n        message = `Le ${label} ne doit pas contenir de chiffre ou de caractère spécial`;\r\n        isValid = false;\r\n    }\r\n    return {isValid: isValid , message: {target: label === \"nom\" ? \"lastName\" : \"firstName\", value: message}  } \r\n}\r\n\r\nconst checkEmail = (email) => {\r\n    const regex = /^[@]+$/\r\n\r\n    if(!email) {\r\n        message = `Veuillez renseigner un email`\r\n        isValid = false\r\n    }else if (!regex.test(email)){\r\n        message = \"Le format de l'email n'est pas valide, il manque un arobase\"\r\n        isValid = false\r\n    }\r\n    return {isValid: isValid , message: {target: \"email\", value: message}  } \r\n}\r\n\r\nexport {checkName, checkEmail}"],"mappings":"AAAA,IAAIA,OAAO,GAAG,IAAI;AAClB,IAAIC,OAAO,GAAG,EAAE;AAEhB,MAAMC,SAAS,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC/B,MAAMC,KAAK,GAAG,cAAc;;EAE5B;;EAEA,IAAI,CAACF,IAAI,EAAE;IACPG,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChBN,OAAO,GAAI,0BAAyBG,KAAM,EAAC;IAC3CJ,OAAO,GAAG,KAAK;EACnB,CAAC,MAAM,IAAI,CAACK,KAAK,CAACG,IAAI,CAACL,IAAI,CAAC,EAAE;IAC1BG,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChBN,OAAO,GAAI,MAAKG,KAAM,0DAAyD;IAC/EJ,OAAO,GAAG,KAAK;EACnB;EACA,OAAO;IAACA,OAAO,EAAEA,OAAO;IAAGC,OAAO,EAAE;MAACQ,MAAM,EAAEL,KAAK,KAAK,KAAK,GAAG,UAAU,GAAG,WAAW;MAAEM,KAAK,EAAET;IAAO;EAAG,CAAC;AAC/G,CAAC;AAED,MAAMU,UAAU,GAAIC,KAAK,IAAK;EAC1B,MAAMP,KAAK,GAAG,QAAQ;EAEtB,IAAG,CAACO,KAAK,EAAE;IACPX,OAAO,GAAI,8BAA6B;IACxCD,OAAO,GAAG,KAAK;EACnB,CAAC,MAAK,IAAI,CAACK,KAAK,CAACG,IAAI,CAACI,KAAK,CAAC,EAAC;IACzBX,OAAO,GAAG,6DAA6D;IACvED,OAAO,GAAG,KAAK;EACnB;EACA,OAAO;IAACA,OAAO,EAAEA,OAAO;IAAGC,OAAO,EAAE;MAACQ,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAET;IAAO;EAAG,CAAC;AAC5E,CAAC;AAED,SAAQC,SAAS,EAAES,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}