{"ast":null,"code":"const checkName = (name, label) => {\n  const regex = /^[a-zA-Z']+$/;\n  let isValid = true;\n  let message = \"\";\n  if (!name) {\n    console.log(\"1\");\n    message = `Veuillez renseigner un ${label}`;\n    isValid = false;\n  } else if (!regex.test(name)) {\n    message = `Le ${label} ne doit pas contenir de chiffre ou de caractère spécial`;\n    isValid = false;\n  }\n  return {\n    isValid: isValid,\n    message: {\n      target: label === \"nom\" ? \"lastName\" : \"firstName\",\n      value: message\n    }\n  };\n};\nconst checkEmail = email => {\n  const regex = /^[@]+$/;\n  let isValid = true;\n  let message = \"\";\n  if (!email) {\n    message = `Veuillez renseigner un email`;\n    isValid = false;\n  } else if (!regex.test(email)) {\n    message = \"Le format de l'email n'est pas valide, il manque un arobase\";\n    isValid = false;\n  }\n  return {\n    isValid: isValid,\n    message: {\n      target: \"email\",\n      value: message\n    }\n  };\n};\nexport { checkName, checkEmail };","map":{"version":3,"names":["checkName","name","label","regex","isValid","message","console","log","test","target","value","checkEmail","email"],"sources":["C:/Git/ProjetPerso/Ynov/Fenol2/my-app/src/validations/formValidation.js"],"sourcesContent":["const checkName = (name, label) => {\r\n  const regex = /^[a-zA-Z']+$/;\r\n  let isValid = true;\r\n  let message = \"\";\r\n\r\n  if (!name) {\r\n    console.log(\"1\");\r\n    message = `Veuillez renseigner un ${label}`;\r\n    isValid = false;\r\n  } else if (!regex.test(name)) {\r\n    message = `Le ${label} ne doit pas contenir de chiffre ou de caractère spécial`;\r\n    isValid = false;\r\n  }\r\n  return {\r\n    isValid: isValid,\r\n    message: {\r\n      target: label === \"nom\" ? \"lastName\" : \"firstName\",\r\n      value: message,\r\n    },\r\n  };\r\n};\r\n\r\nconst checkEmail = (email) => {\r\n  const regex = /^[@]+$/;\r\n  let isValid = true;\r\n  let message = \"\";\r\n\r\n  if (!email) {\r\n    message = `Veuillez renseigner un email`;\r\n    isValid = false;\r\n  } else if (!regex.test(email)) {\r\n    message = \"Le format de l'email n'est pas valide, il manque un arobase\";\r\n    isValid = false;\r\n  }\r\n  return { isValid: isValid, message: { target: \"email\", value: message } };\r\n};\r\n\r\nexport { checkName, checkEmail };\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EACjC,MAAMC,KAAK,GAAG,cAAc;EAC5B,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,OAAO,GAAG,EAAE;EAEhB,IAAI,CAACJ,IAAI,EAAE;IACTK,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChBF,OAAO,GAAI,0BAAyBH,KAAM,EAAC;IAC3CE,OAAO,GAAG,KAAK;EACjB,CAAC,MAAM,IAAI,CAACD,KAAK,CAACK,IAAI,CAACP,IAAI,CAAC,EAAE;IAC5BI,OAAO,GAAI,MAAKH,KAAM,0DAAyD;IAC/EE,OAAO,GAAG,KAAK;EACjB;EACA,OAAO;IACLA,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAE;MACPI,MAAM,EAAEP,KAAK,KAAK,KAAK,GAAG,UAAU,GAAG,WAAW;MAClDQ,KAAK,EAAEL;IACT;EACF,CAAC;AACH,CAAC;AAED,MAAMM,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAMT,KAAK,GAAG,QAAQ;EACtB,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,OAAO,GAAG,EAAE;EAEhB,IAAI,CAACO,KAAK,EAAE;IACVP,OAAO,GAAI,8BAA6B;IACxCD,OAAO,GAAG,KAAK;EACjB,CAAC,MAAM,IAAI,CAACD,KAAK,CAACK,IAAI,CAACI,KAAK,CAAC,EAAE;IAC7BP,OAAO,GAAG,6DAA6D;IACvED,OAAO,GAAG,KAAK;EACjB;EACA,OAAO;IAAEA,OAAO,EAAEA,OAAO;IAAEC,OAAO,EAAE;MAAEI,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAEL;IAAQ;EAAE,CAAC;AAC3E,CAAC;AAED,SAASL,SAAS,EAAEW,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}